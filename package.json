{
  "name": "thea-code",
  "displayName": "Thea Code",
  "description": "A whole dev team of AI agents in your editor.",
  "publisher": "SolaceHarmony",
  "version": "0.0.5",
  "icon": "assets/icons/feather.png",
  "galleryBanner": {
    "color": "#617A91",
    "theme": "dark"
  },
  "engines": {
    "vscode": "^1.84.0",
    "node": "22.16.0"
  },
  "author": {
    "name": "Sydney Renee",
    "email": "sydney@solace.ofharmony.ai"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/SolaceHarmony/Thea-Code"
  },
  "homepage": "https://github.com/SolaceHarmony/Thea-Code",
  "categories": [
    "AI",
    "Chat",
    "Programming Languages",
    "Education",
    "Snippets",
    "Testing"
  ],
  "keywords": [
    "claude",
    "dev",
    "mcp",
    "openrouter",
    "coding",
    "agent",
    "autonomous",
    "chatgpt",
    "sonnet",
    "ai",
    "llama",
    "thea",
    "solace",
    "ember"
  ],
  "activationEvents": [
    "onLanguage",
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "submenus": [
      {
        "id": "thea-code.contextMenu",
        "label": "Thea Code"
      },
      {
        "id": "thea-code.terminalMenu",
        "label": "Thea Code"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "thea-code-ActivityBar",
          "title": "Thea Code",
          "icon": "assets/icons/icon.svg"
        }
      ]
    },
    "views": {
      "thea-code-ActivityBar": [
        {
          "type": "webview",
          "icon": "assets/icons/icon.svg",
          "id": "thea-code.SidebarProvider",
          "name": ""
        }
      ]
    },
    "commands": [
      {
        "command": "thea-code.plusButtonClicked",
        "title": "New Task",
        "icon": "$(add)"
      },
      {
        "command": "thea-code.mcpButtonClicked",
        "title": "MCP Servers",
        "icon": "$(server)"
      },
      {
        "command": "thea-code.promptsButtonClicked",
        "title": "Prompts",
        "icon": "$(notebook)"
      },
      {
        "command": "thea-code.historyButtonClicked",
        "title": "History",
        "icon": "$(history)"
      },
      {
        "command": "thea-code.popoutButtonClicked",
        "title": "Open in Editor",
        "icon": "$(link-external)"
      },
      {
        "command": "thea-code.settingsButtonClicked",
        "title": "Settings",
        "icon": "$(settings-gear)"
      },
      {
        "command": "thea-code.helpButtonClicked",
        "title": "Documentation",
        "icon": "$(question)"
      },
      {
        "command": "thea-code.openInNewTab",
        "title": "Open In New Tab",
        "category": "Thea Code"
      },
      {
        "command": "thea-code.explainCode",
        "title": "Explain Code",
        "category": "Thea Code"
      },
      {
        "command": "thea-code.fixCode",
        "title": "Fix Code",
        "category": "Thea Code"
      },
      {
        "command": "thea-code.improveCode",
        "title": "Improve Code",
        "category": "Thea Code"
      },
      {
        "command": "thea-code.addToContext",
        "title": "Add To Context",
        "category": "Thea Code"
      },
      {
        "command": "thea-code.newTask",
        "title": "New Task",
        "category": "Thea Code"
      },
      {
        "command": "thea-code.terminalAddToContext",
        "title": "Add Terminal Content to Context",
        "category": "Terminal"
      },
      {
        "command": "thea-code.terminalFixCommand",
        "title": "Fix This Command",
        "category": "Terminal"
      },
      {
        "command": "thea-code.terminalExplainCommand",
        "title": "Explain This Command",
        "category": "Terminal"
      },
      {
        "command": "thea-code.terminalFixCommandInCurrentTask",
        "title": "Fix This Command (Current Task)",
        "category": "Terminal"
      },
      {
        "command": "thea-code.terminalExplainCommandInCurrentTask",
        "title": "Explain This Command (Current Task)",
        "category": "Terminal"
      },
      {
        "command": "thea-code.setCustomStoragePath",
        "title": "Set Custom Storage Path",
        "category": "Thea Code"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "submenu": "thea-code.contextMenu",
          "group": "navigation"
        }
      ],
      "thea-code.contextMenu": [
        {
          "command": "thea-code.addToContext",
          "group": "1_actions@1"
        },
        {
          "command": "thea-code.explainCode",
          "group": "1_actions@2"
        },
        {
          "command": "thea-code.fixCode",
          "group": "1_actions@3"
        },
        {
          "command": "thea-code.improveCode",
          "group": "1_actions@4"
        }
      ],
      "terminal/context": [
        {
          "submenu": "thea-code.terminalMenu",
          "group": "navigation"
        }
      ],
      "thea-code.terminalMenu": [
        {
          "command": "thea-code.terminalAddToContext",
          "group": "1_actions@1"
        },
        {
          "command": "thea-code.terminalFixCommand",
          "group": "1_actions@2"
        },
        {
          "command": "thea-code.terminalExplainCommand",
          "group": "1_actions@3"
        },
        {
          "command": "thea-code.terminalFixCommandInCurrentTask",
          "group": "1_actions@5"
        },
        {
          "command": "thea-code.terminalExplainCommandInCurrentTask",
          "group": "1_actions@6"
        }
      ],
      "view/title": [
        {
          "command": "thea-code.plusButtonClicked",
          "group": "navigation@1",
          "when": "view == thea-code.SidebarProvider"
        },
        {
          "command": "thea-code.promptsButtonClicked",
          "group": "navigation@2",
          "when": "view == thea-code.SidebarProvider"
        },
        {
          "command": "thea-code.mcpButtonClicked",
          "group": "navigation@3",
          "when": "view == thea-code.SidebarProvider"
        },
        {
          "command": "thea-code.historyButtonClicked",
          "group": "navigation@4",
          "when": "view == thea-code.SidebarProvider"
        },
        {
          "command": "thea-code.popoutButtonClicked",
          "group": "navigation@5",
          "when": "view == thea-code.SidebarProvider"
        },
        {
          "command": "thea-code.settingsButtonClicked",
          "group": "navigation@6",
          "when": "view == thea-code.SidebarProvider"
        },
        {
          "command": "thea-code.helpButtonClicked",
          "group": "navigation@7",
          "when": "view == thea-code.SidebarProvider"
        }
      ]
    },
    "configuration": {
      "title": "Thea Code",
      "properties": {
        "thea-code.allowedCommands": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "npm test",
            "npm install",
            "tsc",
            "git log",
            "git diff",
            "git show"
          ],
          "description": "Commands that can be auto-executed when 'Always approve execute operations' is enabled"
        },
        "thea-code.vsCodeLmModelSelector": {
          "type": "object",
          "properties": {
            "vendor": {
              "type": "string",
              "description": "The vendor of the language model (e.g. copilot)"
            },
            "family": {
              "type": "string",
              "description": "The family of the language model (e.g. gpt-4)"
            }
          },
          "description": "Settings for VSCode Language Model API"
        },
        "thea-code.customStoragePath": {
          "type": "string",
          "default": "",
          "description": "Custom storage path. Leave empty to use the default location. Supports absolute paths (e.g. 'D:\\TheaCodeStorage')"
        }
      }
    }
  },
  "scripts": {
    "build": "npm run clean && npm run brand && npm run build:extension && npm run build:webui",
    "build:extension": "npx esbuild --bundle ./src/extension.ts --external:vscode --platform=node --format=esm --outfile=dist/extension.js --sourcemap",
    "build:webui": "cd webview-ui && npm run build",
    "brand": "npm run prettier:branding",
    "semantic-release": "semantic-release",
    "clean": "rimraf out",
    "precompile": "cross-os precompile",
    "compile": "cross-os compile",
    "watch": "cross-os watch",
    "lint": "eslint src --ext .ts,.tsx",
    "version": "npm run package && npm run prettier:branding && npm run verify",
    "generateChatCommandsClass": "node -e \"require('./scripts/generate-types.mjs').generateChatCommandsClass();\"",
    "dev": "npm run watch",
    "pretty": "prettier --write --ignore-unknown \"**/*\"",
    "pretty:check": "prettier --check --ignore-unknown \"**/*\"",
    "prettier:branding": "node scripts/apply-thea-branding.js",
    "verify": "node scripts/verify-branding.js",
    "package": "npm run clean && npm run build:extension && npm run build:webui && vsce package --out bin/thea-code-$npm_package_version.vsix",
    "test": "node ./scripts/run-all-linters.js && npm run test:jest",
    "test:jest": "cd webview-ui && npm run test && cd .. && npm run test:extension",
    "test:extension": "jest",
    "test:types": "tsc --noEmit",
    "start-ollama-mock": "tsx test/ollama-mock-server/server.ts",
    "install:all": "npm install && cd webview-ui && npm install && cd ../e2e && npm install && cd ../"
  },
  "dependencies": {
    "@anthropic-ai/bedrock-sdk": "^0.22.0",
    "@anthropic-ai/sdk": "^0.51.0",
    "@anthropic-ai/vertex-sdk": "^0.11.3",
    "@aws-sdk/client-bedrock-runtime": "^3.812.0",
    "@google-cloud/vertexai": "^1.10.0",
    "@google/generative-ai": "^0.24.1",
    "@mistralai/mistralai": "^1.6.1",
    "@modelcontextprotocol/sdk": "^1.11.5",
    "@types/clone-deep": "^4.0.4",
    "@types/pdf-parse": "^1.1.5",
    "@types/tmp": "^0.2.6",
    "@types/turndown": "^5.0.5",
    "@types/vscode": "^1.100.0",
    "@vscode/codicons": "^0.0.36",
    "axios": "^1.9.0",
    "cheerio": "^1.0.0",
    "chokidar": "^4.0.3",
    "clone-deep": "^4.0.1",
    "data-urls": "^5.0.0",
    "default-shell": "^2.2.0",
    "delay": "^6.0.0",
    "diff": "^8.0.2",
    "diff-match-patch": "^1.0.5",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "fast-deep-equal": "^3.1.3",
    "fast-xml-parser": "^5.2.3",
    "fastest-levenshtein": "^1.0.16",
    "formdata-node": "^6.0.3",
    "fzf": "^0.5.2",
    "get-folder-size": "^5.0.0",
    "globby": "^14.1.0",
    "i18next": "^25.2.0",
    "isbinaryfile": "^5.0.4",
    "js-tiktoken": "^1.0.20",
    "jsdom": "^26.1.0",
    "lru-cache": "^11.1.0",
    "mammoth": "^1.9.0",
    "monaco-vscode-textmate-theme-converter": "^0.1.7",
    "openai": "^4.102.0",
    "os-name": "^6.0.0",
    "p-wait-for": "^5.0.2",
    "pdf-parse": "^1.1.1",
    "pkce-challenge": "^5.0.0",
    "playwright": "^1.52.0",
    "posthog-node": "^4.17.2",
    "pretty-bytes": "^7.0.0",
    "puppeteer-chromium-resolver": "^24.0.1",
    "puppeteer-core": "^24.9.0",
    "reconnecting-eventsource": "^1.6.4",
    "say": "^0.16.0",
    "serialize-error": "^12.0.0",
    "simple-git": "^3.27.0",
    "sound-play": "^1.1.0",
    "strip-ansi": "^7.1.0",
    "strip-bom": "^5.0.0",
    "tmp": "^0.2.3",
    "tree-sitter-wasms": "^0.1.12",
    "turndown": "^7.2.0",
    "web-tree-sitter": "^0.25.4",
    "zod": "^3.25.20"
  },
  "devDependencies": {
    "@changesets/cli": "^2.29.4",
    "@changesets/types": "^6.1.0",
    "@dotenvx/dotenvx": "^1.44.1",
    "@types/debug": "^4.1.12",
    "@types/diff-match-patch": "^1.0.36",
    "@types/glob": "^8.1.0",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.15.21",
    "@typescript-eslint/eslint-plugin": "^8.32.1",
    "@typescript-eslint/parser": "^8.32.1",
    "cmpstr": "^2.0.3",
    "esbuild": "^0.25.4",
    "eslint": "^9.27.0",
    "eslint-formatter-compact": "^8.40.0",
    "execa": "^9.5.3",
    "glob": "^11.0.2",
    "husky": "^9.1.7",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "jest-simple-dot-reporter": "^1.0.5",
    "knip": "^5.57.1",
    "lint-staged": "^16.0.0",
    "mkdirp": "^3.0.1",
    "npm-run-all": "^4.1.5",
    "prettier": "^3.5.3",
    "rimraf": "^6.0.1",
    "ts-jest": "^29.3.4",
    "tsup": "^8.5.0",
    "tsx": "^4.19.4",
    "typescript": "^5.8.3",
    "zod-to-ts": "^1.2.0"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx,json,css,md}": [
      "prettier --write"
    ],
    "src/**/*.{ts,tsx}": [
      "npx eslint --max-warnings=0 --fix --config eslint.config.mjs"
    ],
    "webview-ui/**/*.{ts,tsx}": [
      "npx eslint --max-warnings=0 --fix --config webview-ui/eslint.config.mjs"
    ]
  },
  "extensionSecretsPrefix": "thea_code_config_",
  "overrides": {
    "node-domexception": "^2.0.0",
    "jsdom": "^26.1.0",
    "formdata-node": "^6.0.3",
    "glob": "^11.0.2"
  }
}
